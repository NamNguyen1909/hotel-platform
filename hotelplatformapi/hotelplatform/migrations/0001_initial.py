# Generated by Django 5.2.4 on 2025-07-08 14:03

import cloudinary.models
import datetime
import django.core.validators
import django.db.models.deletion
import django.db.models.expressions
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(db_index=True, max_length=50, unique=True)),
                ('status', models.CharField(choices=[('available', 'Trống'), ('booked', 'Đã đặt'), ('occupied', 'Đang sử dụng')], default='available', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('max_guests', models.PositiveIntegerField(default=3)),
                ('extra_guest_surcharge', models.DecimalField(decimal_places=2, default=25.0, max_digits=5)),
                ('amenities', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Quản trị viên'), ('owner', 'Chủ khách sạn'), ('staff', 'Nhân viên'), ('customer', 'Khách hàng')], default='customer', max_length=20)),
                ('full_name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('id_card', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('avatar', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='avatar')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_type', models.CharField(choices=[('new', 'Khách hàng mới'), ('regular', 'Khách phổ thông'), ('vip', 'Khách VIP'), ('super_vip', 'Khách siêu VIP'), ('unknown', 'Không xác định')], default='new', max_length=20)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=50, unique=True)),
                ('discount_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['code', 'is_active'], name='hotelplatfo_code_2f14f8_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('valid_from__lte', models.F('valid_to'))), name='valid_from_before_valid_to')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('booking_confirmation', 'Xác nhận đặt phòng'), ('check_in_reminder', 'Nhắc nhở nhận phòng'), ('check_out_reminder', 'Nhắc nhở trả phòng'), ('promotion', 'Khuyến mãi')], max_length=20)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateTimeField()),
                ('check_out_date', models.DateTimeField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('guest_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('pending', 'Chờ xác nhận'), ('confirmed', 'Đã xác nhận'), ('checked_in', 'Đã nhận phòng'), ('checked_out', 'Đã trả phòng'), ('cancelled', 'Đã hủy'), ('no_show', 'Không xuất hiện')], default='pending', max_length=20)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('qr_code', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='qr_code')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('rooms', models.ManyToManyField(related_name='bookings', to='hotelplatform.room')),
            ],
        ),
        migrations.CreateModel(
            name='RoomRental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateTimeField(auto_now_add=True)),
                ('check_out_date', models.DateTimeField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('guest_count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to='hotelplatform.booking')),
                ('customer', models.ForeignKey(limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='rentals', to=settings.AUTH_USER_MODEL)),
                ('rooms', models.ManyToManyField(related_name='rentals', to='hotelplatform.room')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('vnpay', 'VNPay'), ('cash', 'Tiền mặt')], max_length=20)),
                ('status', models.BooleanField(default=False)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(max_length=255, unique=True)),
                ('customer', models.ForeignKey(limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('discount_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='hotelplatform.discountcode')),
                ('rental', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='hotelplatform.roomrental')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='hotelplatform.roomtype'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='hotelplatfo_role_a364c1_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='hotelplatfo_created_5c664a_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['customer_type'], name='hotelplatfo_custome_e33f94_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'created_at'], name='hotelplatfo_user_id_80aab5_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['customer', 'check_in_date'], name='hotelplatfo_custome_ebdcf7_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['uuid'], name='hotelplatfo_uuid_b0a6b5_idx'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('check_in_date__lt', models.F('check_out_date'))), name='check_in_before_check_out'),
        ),
        migrations.AddConstraint(
            model_name='booking',
            constraint=models.CheckConstraint(condition=models.Q(('check_in_date__lte', django.db.models.expressions.CombinedExpression(models.F('created_at'), '+', models.Value(datetime.timedelta(days=28))))), name='check_in_within_28_days'),
        ),
        migrations.AddIndex(
            model_name='roomrental',
            index=models.Index(fields=['customer', 'check_in_date'], name='hotelplatfo_custome_f873ec_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['rental', 'status'], name='hotelplatfo_rental__5556e2_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['customer', 'status'], name='hotelplatfo_custome_4e6385_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='hotelplatfo_transac_03b29c_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['room_number', 'status'], name='hotelplatfo_room_nu_7a5b2b_idx'),
        ),
    ]
